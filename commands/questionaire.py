from aiogram import Router, filters, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from commands.keyboards import profile, rmk 
from utils.states import Form
from configure import config

bp = Router()

@bp.message(Command('profile', '–ø—Ä–æ—Ñ–∏–ª—å'))
async def fill_profile(message: Message,  state: FSMContext):
    # if message.bot.id == message.bot.id:
        await state.set_state(Form.–ò–º—è)
        await message.answer(
            '–í–≤–µ–¥–∏ —Å–≤–æ–µ –∏–º—è',
            reply_markup=profile(message.from_user.first_name)
        )
    # else:
    #     await message.reply('‚ö†Ô∏è Warning --> –õ—É—á—à–µ –Ω–∞–ø–∏—à–∏ —Å—é–¥–∞ @Moarte_sBot')


@bp.message(Form.–ò–º—è)
async def form_name(message: Message, state: FSMContext):
    if message.text.isdigit():
        await message.answer('‚ö†Ô∏è Warning --> –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è')
    else:
        await state.update_data(–ò–º—è=message.text)
        await state.set_state(Form.–í–æ–∑—Ä–∞—Å—Ç)
        await message.answer('–í–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç', reply_markup=rmk)
            

@bp.message(Form.–í–æ–∑—Ä–∞—Å—Ç)
async def form_age(message: Message, state: FSMContext):
    try:
        if message.text.isdigit() and int(message.text) >= 18:
            await state.update_data(–í–æ–∑—Ä–∞—Å—Ç=message.text)
            await state.set_state(Form.–ü–æ–ª)
            await message.answer('–í–≤–µ–¥–∏ —Å–≤–æ–π –≥–µ–Ω–¥–µ—Ä', reply_markup=profile(['–ü–∞—Ä–µ–Ω—å', '–î–µ–≤—É—à–∫–∞']))
        
        elif int(message.text) >= 18:
            await state.update_data(age=message.text)
            await state.set_state(Form.–ü–æ–ª)
            await message.answer('–í–≤–µ–¥–∏ —Å–≤–æ–π –≥–µ–Ω–¥–µ—Ä', reply_markup=profile(['–ü–∞—Ä–µ–Ω—å', '–î–µ–≤—É—à–∫–∞']))
        
            
        else:
            await state.clear()
            await message.reply('‚ö†Ô∏è Warning --> –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è üîû', reply_markup=rmk)
            
    except Exception:
        pass
    
@bp.message(Form.–ü–æ–ª, F.text.casefold().in_(['–ø–∞—Ä–µ–Ω—å', '–¥–µ–≤—É—à–∫–∞']))
async def form_sex(message: Message, state: FSMContext):
    await state.update_data(–ü–æ–ª=message.text)
    await state.set_state(Form.–û–ø–∏—Å–∞–Ω–∏–µ)
    await message.answer(
        'üìù –û—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–π —Å–µ–±—è 3 —Å–ª–æ–≤–∞–º–∏.\n–ü–∏—à–∏ –≤—Å–µ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º', reply_markup=rmk)
    
@bp.message(Form.–ü–æ–ª)
async def incorrect_form_sex(message: Message, state: FSMContext):
    await message.answer('‚ö†Ô∏è Warning --> –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É')
    
    
@bp.message(Form.–û–ø–∏—Å–∞–Ω–∏–µ)
async def form_about(message: Message, state: FSMContext):
    if len(message.text.lower()) > 5:
        await state.update_data(–û–ø–∏—Å–∞–Ω–∏–µ=message.text)
        await state.set_state(Form.photo)
        await message.answer('–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é', reply_markup=rmk)
    else:
        await message.answer(
            '‚ö†Ô∏è Warning --> –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ')
    

@bp.message(Form.photo, F.photo)
async def form_photo(message: Message, state: FSMContext):
    photo_file_id = message.photo[-1].file_id
    description_users = await state.get_data()
    await state.clear()
    
    list_users = []
    [
        list_users.append(f'{value}')
        for key, value in description_users.items()
    ]
    
    await message.answer_photo(
        photo_file_id,
        '\n'.join(list_users)
    )
    
@bp.message(Form.photo, ~F.photo)
async def incorrect_form_photo(message: Message, state: FSMContext):
    await message.answer('‚ö†Ô∏è Warning --> –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ')
    